#!/bin/bash

set -e

DRYRUN=

if [ -z "$HOME" ]; then
  echo 'Your $HOME is unset!'
  exit 1
fi

function safe_delete_existing_file
{
  if [ -L "$1" ]; then
    $DRYRUN rm "$1"
  elif [ -e "$1" ]; then
    $DRYRUN rm -ri "$1"
  fi
}

mkdir -p "$HOME/.ssh"
chmod 700 "$HOME/.ssh"

mkdir -p "$HOME/.vnc"
chmod 700 "$HOME/.vnc"

mkdir -p "$HOME/src"

if [[ `uname` == 'Darwin' ]]; then
  mkdir -p "$HOME/Library/Vim/backup"
  mkdir -p "$HOME/Library/Vim/swap"
  mkdir -p "$HOME/Library/Vim/undo"
else
  mkdir -p "$HOME/.local/share/vim/backup"
  mkdir -p "$HOME/.local/share/vim/swap"
  mkdir -p "$HOME/.local/share/vim/undo"
fi

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR"

BASE_SCRIPT_DIR=$(basename $SCRIPT_DIR)
echo $BASE_SCRIPT_DIR

IFS=$'\n'

FIND=find
if [ $(uname) == 'Darwin' ]; then
  FIND=/usr/local/bin/gfind
fi

pushd src
for dotfile in $($FIND . -maxdepth 1 ! -path .) ; do
  FILENAME=$(basename $dotfile)
  echo $FILENAME
  SRC=$BASE_SCRIPT_DIR/src/$FILENAME
  DST=$HOME/src/$FILENAME
  if [ ! -e "$HOME/$SRC" ]; then echo could not find "$SRC"; exit 1; fi
  safe_delete_existing_file "$DST"
  $DRYRUN ln -s "../$SRC" "$DST"
done
popd
echo

for dotfile in $($FIND . -maxdepth 1 ! -path ./.git ! -path ./.gitignore ! -path ./.gitmodules -regex '.*/\..+') ; do
  FILENAME=$(basename $dotfile)
  echo $FILENAME
  SRC=$BASE_SCRIPT_DIR/$FILENAME
  DST=$HOME/$FILENAME
  if [ ! -e "$HOME/$SRC" ]; then echo could not find "$SRC"; exit 1; fi
  safe_delete_existing_file "$DST"
  $DRYRUN ln -s "$SRC" "$DST"
done
echo

mkdir -p "$HOME/.config"
pushd config
for dotfile in $($FIND . -maxdepth 1 ! -path .) ; do
  FILENAME=$(basename $dotfile)
  echo $FILENAME
  SRC=$BASE_SCRIPT_DIR/config/$FILENAME
  DST=$HOME/.config/$FILENAME
  if [ ! -e "$HOME/$SRC" ]; then echo could not find "$SRC"; exit 1; fi
  safe_delete_existing_file "$DST"
  $DRYRUN ln -s "../$SRC" "$DST"
done
popd
echo

echo "export PATH=$HOME/$BASE_SCRIPT_DIR/bin:$HOME/bin:\$PATH" > "$SCRIPT_DIR/.bash.d/add_dot_extra_paths.sh"

# tmux
if [[ ! -d $HOME/src/tmux ]]; then
  git clone https://github.com/tmux/tmux.git $HOME/src/tmux
fi

# creep2 font
if [[ ! -d $HOME/src/creep2 ]]; then
  git clone https://github.com/raymond-w-ko/creep2.git $HOME/src/creep2
  
  mkdir -p "$HOME/.local/share/fonts"
  pushd "$HOME/.local/share/fonts"
  ln -s ../../../src/creep2
  popd
fi

# vim
if [[ ! -d $HOME/src/vim ]]; then
  git clone https://github.com/raymond-w-ko/vim.git $HOME/src/vim
fi
if [[ -f /home/rko/.has-full-github-access ]]; then
  echo "setting ~/src/vim origin to be SSH based"
  ( cd $HOME/src/vim && git remote set-url origin git@github.com:raymond-w-ko/vim.git )
fi

################################################################################

if [ -z "$1" ]; then
  echo 'did not request machine specific config files, exiting'
  exit 0
fi

pushd "machines/$1"
for dotfile in $($FIND . -maxdepth 1 -regex '.*/\..+') ; do
  FILENAME=$(basename $dotfile)
  echo $FILENAME
  SRC=$BASE_SCRIPT_DIR/machines/$1/$FILENAME
  DST=$HOME/$FILENAME
  if [ ! -e "$HOME/$SRC" ]; then echo could not find "$SRC"; exit 1; fi
  safe_delete_existing_file "$DST"
  $DRYRUN ln -s "$SRC" "$DST"
done
popd
echo

echo "export PATH=$HOME/$BASE_SCRIPT_DIR/machines/$1/bin:\$PATH" >> "$SCRIPT_DIR/.bash.d/add_dot_extra_paths.sh"
